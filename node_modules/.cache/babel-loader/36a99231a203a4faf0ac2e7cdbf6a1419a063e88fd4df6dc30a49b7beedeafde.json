{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rusla\\\\Desktop\\\\goit-zadralo\\\\dz5\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n    this.addContact = contact => {\n      const isDuplicate = this.state.contacts.some(existingContact => existingContact.name.toLowerCase() === contact.name.toLowerCase());\n      if (isDuplicate) {\n        alert(`${contact.name} is already in contacts.`);\n        return;\n      }\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact]\n      }));\n    };\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n    this.handleFilterChange = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n  }\n  componentDidMount() {\n    const savedContacts = localStorage.getItem('contacts');\n    if (savedContacts) {\n      this.setState({\n        contacts: JSON.parse(savedContacts)\n      });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const {\n      contacts,\n      filter\n    } = this.state;\n    const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: this.addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: this.handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        contacts: filteredContacts,\n        onDeleteContact: this.deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ContactForm","ContactList","Filter","jsxDEV","_jsxDEV","App","constructor","args","state","contacts","id","name","number","filter","addContact","contact","isDuplicate","some","existingContact","toLowerCase","alert","setState","prevState","deleteContact","contactId","handleFilterChange","e","target","value","componentDidMount","savedContacts","localStorage","getItem","JSON","parse","componentDidUpdate","prevProps","setItem","stringify","render","filteredContacts","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","onDeleteContact"],"sources":["C:/Users/rusla/Desktop/goit-zadralo/dz5/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n    if (savedContacts) {\r\n      this.setState({ contacts: JSON.parse(savedContacts) });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = (contact) => {\r\n    const isDuplicate = this.state.contacts.some(\r\n      (existingContact) => existingContact.name.toLowerCase() === contact.name.toLowerCase()\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      alert(`${contact.name} is already in contacts.`);\r\n      return;\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, contact]\r\n    }));\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n    }));\r\n  };\r\n\r\n  handleFilterChange = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.addContact} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.handleFilterChange} />\r\n        <ContactList contacts={filteredContacts} onDeleteContact={this.deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}